{"version":3,"sources":["webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/auth.component.html","webpack:///./src/app/admin/auth.component.ts","webpack:///./src/app/admin/auth.guard.ts","webpack:///./src/app/admin/orderTable.component.html","webpack:///./src/app/admin/orderTable.component.ts","webpack:///./src/app/admin/productEditor.component.html","webpack:///./src/app/admin/productEditor.component.ts","webpack:///./src/app/admin/productTable.component.html","webpack:///./src/app/admin/productTable.component.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["module.exports = \"<div class=\\\"navbar navbar-inverse bg-info\\\">\\r\\n  <a class=\\\"navbar-brand\\\">SPORTS STORE Admin</a>\\r\\n</div>\\r\\n<div class=\\\"m-t-1\\\">\\r\\n  <div class=\\\"col-xs-3\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-outline-info btn-block\\\"\\r\\n            routerLink=\\\"/admin/main/products\\\"\\r\\n            routerLinkActive=\\\"active\\\">\\r\\n      Products\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-outline-info btn-block\\\"\\r\\n            routerLink=\\\"/admin/main/orders\\\"\\r\\n            routerLinkActive=\\\"active\\\">\\r\\n      Orders\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-outline-danger btn-block\\\" (click)=\\\"logout()\\\">\\r\\n      Logout\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-9\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../model/auth.service\";\r\n@Component({\r\n  templateUrl: \"admin.component.html\"\r\n})\r\nexport class AdminComponent {\r\n  constructor(private auth: AuthService,\r\n              private router: Router) { }\r\n  logout() {\r\n    this.auth.clear();\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AuthComponent } from \"./auth.component\";\r\nimport { AdminComponent } from \"./admin.component\";\r\nimport { AuthGuard } from \"./auth.guard\";\r\nimport { ProductTableComponent } from \"./productTable.component\";\r\nimport { ProductEditorComponent } from \"./productEditor.component\";\r\nimport { OrderTableComponent } from \"./orderTable.component\";\r\nlet routing = RouterModule.forChild([\r\n  { path: \"auth\", component: AuthComponent },\r\n  { path: \"main\", component: AdminComponent, canActivate: [AuthGuard],\r\n    children: [\r\n      { path: \"products/:mode/:id\", component: ProductEditorComponent },\r\n      { path: \"products/:mode\", component: ProductEditorComponent },\r\n      { path: \"products\", component: ProductTableComponent },\r\n      { path: \"orders\", component: OrderTableComponent },\r\n      { path: \"**\", redirectTo: \"products\" }\r\n    ]},\r\n  { path: \"**\", redirectTo: \"auth\" }\r\n]);\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, routing],\r\n  providers: [AuthGuard],\r\n  declarations: [AuthComponent, AdminComponent,\r\n    ProductTableComponent, ProductEditorComponent, OrderTableComponent]\r\n})\r\nexport class AdminModule { }\r\n","module.exports = \"<div class=\\\"bg-info p-a-1 text-xs-center\\\">\\r\\n  <h3>SportStore Admin</h3>\\r\\n</div>\\r\\n<div class=\\\"bg-danger m-t-1 p-a-1 text-xs-center\\\"\\r\\n*ngIf=\\\"errorMessage!=null\\\">\\r\\n{{errorMessage}}\\r\\n</div>\\r\\n<div class=\\\"p-a-1\\\">\\r\\n<form novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"authenticate(form)\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name</label>\\r\\n    <input class=\\\"form-control\\\" name=\\\"username\\\"\\r\\n           [(ngModel)]=\\\"username\\\" required />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Password</label>\\r\\n    <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\"\\r\\n           [(ngModel)]=\\\"password\\\" required />\\r\\n  </div>\\r\\n  <div class=\\\"text-xs-center\\\">\\r\\n    <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/\\\">Go back</button>\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Log In</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport { AuthService } from \"../model/auth.service\";\r\n@Component({\r\n  templateUrl:\"auth.component.html\"\r\n})\r\nexport class AuthComponent {\r\n  public username: string;\r\n  public password: string;\r\n  public errorMessage: string;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  authenticate(form: NgForm) {\r\n    if (form.valid) {\r\n      this.auth.authenticate(this.username, this.password)\r\n        .subscribe(response => {\r\n          if (response) {\r\n            this.router.navigateByUrl(\"/admin/main\");\r\n          }\r\n          this.errorMessage = \"Authentication Failed\";\r\n        })\r\n    } else {\r\n      this.errorMessage = \"Form Data Invalid\";\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot,\r\n  Router } from \"@angular/router\";\r\nimport { AuthService } from \"../model/auth.service\";\r\n@Injectable()\r\nexport class AuthGuard {\r\n  constructor(private router: Router,\r\n              private auth: AuthService) { }\r\n  canActivate(route: ActivatedRouteSnapshot,\r\n              state: RouterStateSnapshot): boolean {\r\n    if (!this.auth.authenticated) {\r\n      this.router.navigateByUrl(\"/admin/auth\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"form-check\\\">\\r\\n  <label class=\\\"form-check-label\\\">\\r\\n    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [(ngModel)]=\\\"includeShipped\\\"/>\\r\\n    Display Shipped Orders\\r\\n  </label>\\r\\n</div>\\r\\n<table class=\\\"table table-sm\\\">\\r\\n  <thead>\\r\\n  <tr><th>Name</th><th>Zip</th><th colspan=\\\"2\\\">Cart</th><th></th></tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n  <tr *ngIf=\\\"getOrders().length == 0\\\">\\r\\n    <td colspan=\\\"5\\\">There are no orders</td>\\r\\n  </tr>\\r\\n  <ng-template ngFor let-o [ngForOf]=\\\"getOrders()\\\">\\r\\n    <tr>\\r\\n      <td>{{o.name}}</td><td>{{o.zip}}</td>\\r\\n      <th>Product</th><th>Quantity</th>\\r\\n      <td>\\r\\n        <button class=\\\"btn btn-warning\\\" (click)=\\\"markShipped(o)\\\">\\r\\n          Ship\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(o.id)\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let line of o.cart.lines\\\">\\r\\n      <td colspan=\\\"2\\\"></td>\\r\\n      <td>{{line.product.name}}</td>\\r\\n      <td>{{line.quantity}}</td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Order } from \"../model/order.model\";\r\nimport { OrderRepository } from \"../model/order.repository\";\r\n@Component({\r\n  templateUrl: \"orderTable.component.html\"\r\n})\r\nexport class OrderTableComponent {\r\n  includeShipped = false;\r\n  constructor(private repository: OrderRepository) {}\r\n  getOrders(): Order[] {\r\n    return this.repository.getOrders()\r\n      .filter(o => this.includeShipped || !o.shipped);\r\n  }\r\n  markShipped(order: Order) {\r\n    order.shipped = true;\r\n    this.repository.updateOrder(order);\r\n  }\r\n  delete(id: number) {\r\n    this.repository.deleteOrder(id);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"bg-primary p-a-1\\\" [class.bg-warning]=\\\"editing\\\">\\r\\n  <h5>{{editing  ? \\\"Edit\\\" : \\\"Create\\\"}} Product</h5>\\r\\n</div>\\r\\n<form novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"save(form)\\\" >\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name</label>\\r\\n    <input class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"product.name\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Category</label>\\r\\n    <input class=\\\"form-control\\\" name=\\\"category\\\" [(ngModel)]=\\\"product.\\r\\n                      category\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Description</label>\\r\\n    <textarea class=\\\"form-control\\\" name=\\\"description\\\"\\r\\n              [(ngModel)]=\\\"product.description\\\">\\r\\n        </textarea>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Price</label>\\r\\n    <input class=\\\"form-control\\\" name=\\\"price\\\" [(ngModel)]=\\\"product.price\\\" />\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [class.btn-warning]=\\\"editing\\\">\\r\\n    {{editing ? \\\"Save\\\" : \\\"Create\\\"}}\\r\\n  </button>\\r\\n  <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" routerLink=\\\"/admin/main/\\r\\n                  products\\\">\\r\\n    Cancel\\r\\n  </button>\\r\\n</form>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Product } from \"../model/product.model\";\r\nimport { ProductRepository } from \"../model/product.repository\";\r\n@Component({\r\n  templateUrl: \"productEditor.component.html\"\r\n})\r\nexport class ProductEditorComponent {\r\n  editing: boolean = false;\r\n  product: Product = new Product();\r\n  constructor(private repository: ProductRepository,\r\n              private router: Router,\r\n              activeRoute: ActivatedRoute) {\r\n    this.editing = activeRoute.snapshot.params[\"mode\"] == \"edit\";\r\n    if (this.editing) {\r\n      Object.assign(this.product,\r\n        repository.getProduct(activeRoute.snapshot.params[\"id\"]));\r\n    }\r\n  }\r\n  save(form: NgForm) {\r\n    this.repository.saveProduct(this.product);\r\n    this.router.navigateByUrl(\"/admin/main/products\");\r\n  }\r\n}\r\n","module.exports = \"<table class=\\\"table table-sm table-striped\\\">\\r\\n  <thead>\\r\\n  <tr>\\r\\n    <th>ID</th><th>Name</th><th>Category</th><th>Price</th>\\r\\n    <th></th>\\r\\n  </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n  <tr *ngFor=\\\"let p of getProducts()\\\">\\r\\n    <td>{{p.id}}</td>\\r\\n    <td>{{p.name}}</td>\\r\\n    <td>{{p.category}}</td>\\r\\n    <td>{{p.price | currency:\\\"USD\\\":true:\\\"2.2-2\\\"}}</td>\\r\\n    <td>\\r\\n      <button class=\\\"btn btn-sm btn-warning\\\"\\r\\n              [routerLink]=\\\"['/admin/main/products/edit', p.id]\\\">\\r\\n        Edit\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteProduct(p.id)\\\">\\r\\n        Delete\\r\\n      </button>\\r\\n    </td>\\r\\n  </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-primary\\\" routerLink=\\\"/admin/main/products/create\\\">\\r\\n  Create New Product\\r\\n</button>\\r\\n\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Product } from \"../model/product.model\";\r\nimport { ProductRepository } from \"../model/product.repository\";\r\n@Component({\r\n  templateUrl: \"productTable.component.html\"\r\n})\r\nexport class ProductTableComponent {\r\n  constructor(private repository: ProductRepository) { }\r\n  getProducts(): Product[] {\r\n    return this.repository.getProducts();\r\n  }\r\n  deleteProduct(id: number) {\r\n    this.repository.deleteProduct(id);\r\n  }\r\n}\r\n"],"sourceRoot":""}